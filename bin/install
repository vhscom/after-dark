#!/bin/sh
set -e

validate_hugo () {
   # Exit with error if hugo is not installed
   if ! hash hugo 2>/dev/null ; then
     echo "Error: After Dark requires Hugo version 0.44 or greater" >&2; exit 1
   fi

   # Exit with error if not minimum required hugo version
   re="v(0\d*\.([4-9][4-9]|[5-9])|[1-9]).*"
   if ! hugo version | grep -qE "$re" ; then
      echo "Error: After Dark requires Hugo version 0.44 or greater" >&2; exit 1
   fi
}

create_site_dir () {
   SITE_DIR="flying-toasters"
   if [ "$1" != "" ] ; then
      SITE_DIR="$1"
   fi

   SITE_DIR_ABS="$PWD/$SITE_DIR"

   echo "Creating directory $SITE_DIR_ABS"
   mkdir -p "$SITE_DIR"
}

create_site () {
   echo "Creating a new Hugo site ..."
   hugo new site "$SITE_DIR" 1>/dev/null
   cd "$SITE_DIR" || exit 1
}

download_theme () {
   echo "Downloading the latest version of the After Dark theme ..."
   meta=$(wget -qO - https://registry.npmjs.org/after-dark/latest)
   vers=$(echo "$meta" | egrep -o "\"version\".*[^,]*," | cut -d ',' -f1 | cut -d ':' -f2 | tr -d '" ')
   mkdir -p themes/after-dark
   wget -qO - https://registry.npmjs.org/after-dark/-/after-dark-"$vers".tgz | tar --strip-components=1 -xz -C themes/after-dark
   echo "Theme version $vers downloaded to $SITE_DIR/themes/after-dark"
}

download_module () {
   [ -z "$1" ] && { echo "Error: Attempt to download undefined module" >&2; exit 1; }
   echo "Downloading $1 module for After Dark theme ..."
   meta=$(wget -qO - https://registry.npmjs.org/"$1"/latest)
   vers=$(echo "$meta" | egrep -o "\"version\".*[^,]*," | cut -d ',' -f1 | cut -d ':' -f2 | tr -d '" ')
   mkdir -p themes/"$1"
   wget -qO - https://registry.npmjs.org/"$1"/-/"$1"-"$vers".tgz | tar --strip-components=1 -xz -C themes/"$1"
   echo "Module version $vers downloaded to $SITE_DIR/themes/$1"
}

configure_theme () {
   # Provide basic configuration and ignore generated files
   echo "Configuring basic After Dark theme settings ..."
   tee "config.toml" > /dev/null <<TOML
baseurl = "https://domain.example/" # Controls base URL sitewide
languageCode = "en-US" # Controls site language
title = "After Dark" # Homepage title and page title suffix
paginate = 11 # Number of posts to show before paginating

# Controls default theme and theme components
theme = [
  "fractal-forest",
  "after-dark"
]

enableRobotsTXT = true # Suggested, enable robots.txt file
disqusShortname = "" # Deprecated, add Disqus shortname for comments

pygmentsCodefences = true # Suggested, highlight fenced code blocks
pygmentsUseClasses = true # Required for custom syntax highlighting

SectionPagesMenu = "main" # Enable menu system for lazy bloggers
footnoteReturnLinkContents = "â†©" # Provides a nicer footnote return link

[params]
  description = "" # Suggested, controls default description meta
  author = "" # Optional, controls author name display on posts
  hide_author = true # Optional, set true to hide author name on posts
  show_menu = false # Optional, set true to enable section menu
  powered_by = true # Optional, set false to disable credits
  images = [
    "https://source.unsplash.com/collection/983219/2000x1322"
  ] # Suggested, controls default Open Graph images

[params.modules.fractal_forest]
  enabled = true # Optional, set false to disable module
  decoders = ["bpgdec8a"] # Optional, 8-bit javascript decoder with animation
TOML
}

create_example_post () {
   echo "Creating an example post to get you started ..."
   hugo new post/coming-soon.md 1>/dev/null
}

serve_site_maybe () {
   if hash elinks 2>/dev/null ; then
      echo "Opening your new After Dark site in elinks ..."
      hugo serve --buildDrafts --port 1337 --bind "0.0.0.0" 1>/dev/null &
      sleep 1 && elinks http://0.0.0.0:1337/
   fi
}

echo "Welcome to the After Dark quick installer. Press CTRL-C at any time to abort."

validate_hugo
create_site_dir "$1"
create_site
download_theme
download_module "fractal-forest"
configure_theme
create_example_post
serve_site_maybe

echo "Installation completed successfully!"
echo "Your new site was created in $SITE_DIR_ABS."
echo "Run 'cd $SITE_DIR && hugo serve --buildDrafts' to serve it."
echo "Thank you for choosing After Dark."

# Stop web server if it's still running backgrounded
kill $(ps aux | awk '/[h]ugo.*1337/ {print $2}') 2>/dev/null
